from prometheus_client import start_http_server, Summary, Counter, Gauge
import psutil
import time

# Start up the server to expose the metrics.
start_http_server(8000)

# Create Prometheus metrics to track script performance
REQUEST_TIME = Summary('script_execution_time_seconds', 'Time spent processing')
ERROR_COUNT = Counter('script_error_count', 'Number of errors encountered')
MEMORY_USAGE = Gauge('script_memory_usage_bytes', 'Memory usage of the script')

@REQUEST_TIME.time()
def process_data():
    try:
        # Simulate script processing
        time.sleep(2)  # Your data processing logic here

        # Track memory usage
        MEMORY_USAGE.set(psutil.Process().memory_info().rss)

    except Exception as e:
        ERROR_COUNT.inc()
        raise e

if __name__ == '__main__':
    while True:
        process_data()
        time.sleep(10)  # Run every 10 seconds
